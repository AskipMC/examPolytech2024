services:
  database:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=super_secret
      - MYSQL_DATABASE=superhero
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    volumes:
      - database:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  back:
    image: back
    build:
      context: java/
      dockerfile: Dockerfile
    container_name: back
    depends_on: 
      database:
        condition: service_healthy
        restart: true
    environment:
      - spring.datasource.url=jdbc:mysql://mysql:3306/superhero
      - spring.datasource.username=user
      - spring.datasource.password=password
    ports:
      - 8448:8448
    networks:
      - network
    healthcheck:
        test: curl http://localhost:8448/actuator/health
        interval: 10s
        timeout: 3s
        retries: 3
  front:
    image: front
    build:
      context: angular/
      dockerfile: Dockerfile
    container_name: front
    depends_on:
      back:
        condition: service_healthy
    environment:
      - BACKEND_URL=http://localhost:8448 #ip du serveur en prod
    ports:
      - 8888:80

volumes:
  database:

networks:
  network: